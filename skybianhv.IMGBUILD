COMPRESSZST=(zstd -c -T0 -18 -)
PKGEXT='.pkg.tar.zst'
SKIPPGPCHECK=1
pkgname=skybian-hv
pkgdesc="Skybian hypervisor image variant"
#pkgver & pkgrel match the version & release of the skywire .deb in the apt repo
pkgver='1.0.0'
pkgrel=3
arch=('any')
_imgarch="arm64"
_img="skybian.img"
_imgfinal="skybian-hv.img"
_root_partition=/dev/loop0p1
makedepends=('arch-install-scripts' 'gnome-disk-utility' 'qemu-arm-static' 'zip') # 'caddy')
source=("${_img}")
#"proxy.sources.list" #used with caddy
noextract=("${_skywiredeb}" "${_skybiandeb}")
sha256sums=('3f23ba8e3b8e8d696d5dfa576b4f35ee44fc4693659519fe61ca771ab8b4220a')

build() {
  _msg2 "copying image.." #so we don't have to extract it every time
  cp -b ../${_img} ${_imgfinal}
  _msg2 "mounting image to loop device.."
  sudo gnome-disk-image-mounter -w ${_imgfinal}
  _msg2 "creating mount dir"
  mkdir -p ${srcdir}/mnt
  _msg2 "mounting ${_root_partition} to mount point"
  sudo mount ${_root_partition} ${srcdir}/mnt
  _msg2 "copy qemu-aarch64-static command to chroot bin"
  sudo cp "$(command -v qemu-aarch64-static)" "${srcdir}/mnt/usr/bin/"
################## chroot modifications for apt repo & package #################
#sudo is used for all commands to give correct environmental vars in chroot
  _msg2 "changing hostname to hypervisor"
    echo "hypervisor" | sudo arch-chroot ${srcdir}/mnt tee /etc/hostname
######################## end chroot modifications ##############################
  [[ -d ${srcdir}/mnt/lost+found ]] && sudo rm -rf ${srcdir}/mnt/lost+found
  _msg2 "Unmounting image"
  sudo umount ${srcdir}/mnt
  _msg2 "detatching /dev/loop0"
  sudo losetup -d /dev/loop0
  mv ${_imgfinal} ../${_imgfinal}
  cd ..
  echo "created image(s):"
  ls $_imgfinal
}

package() {
  #let makepkg compress the archive as it does automatically for any package
  #afterwards remove the metadata from the archive and change the extension
  #avoid the compression step with makepkg --noarchive
  #package only, assuming ${_imgfinal} exists with makepkg -R
  install -Dm644 ${srcdir}/../${_imgfinal} ${pkgdir}/
  cd ${pkgdir}
  _msg2 "Creating image checksum"
  sha256sum ${_imgfinal} > ${_imgfinal}.sha
  cat ${_imgfinal}.sha
  if [[ ! -f ../../${pkgname}-${pkgver}-${pkgrel}-${_imgarch}.img.zip ]]; then
    cd ..
    _msg2 "Creating .zip archive for windows"
    zip -r ${pkgname}-${pkgver}-${pkgrel}-${_imgarch}.img.zip ${pkgname}
    mv *.zip ../
  fi
}

_msg2() {
(( QUIET )) && return
local mesg=$1; shift
printf "${BLUE}  ->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@"
}

#set env to detect that this is a skybian image
#_msg2 "CHROOT: setting SKYBIAN=true in /root/.bashrc"
#echo 'SKYBIAN=true' | sudo arch-chroot ${srcdir}/mnt tee -a /root/.bashrc
#set env to enable skywire VPN server
#_msg2 "CHROOT: setting VPNSERVER=true in /root/.bashrc"
#echo 'VPNSERVER=true' | sudo arch-chroot ${srcdir}/mnt tee -a /root/.bashrc
#_msg2 "CHROOT: configuring unattended-upgrades"
##add the skybian apt repo
#head -n32 ${srcdir}/mnt/etc/apt/apt.conf.d/50unattended-upgrades > ${srcdir}/50unattended-upgrades
#echo '        "origin=skycoin,codename=sid,label=skycoin";' >> ${srcdir}/50unattended-upgrades
#tail -n 115 ${srcdir}/mnt/etc/apt/apt.conf.d/50unattended-upgrades >> ${srcdir}/50unattended-upgrades
#sudo rm ${srcdir}/mnt/etc/apt/apt.conf.d/50unattended-upgrades
#sudo install -Dm644 ${srcdir}/50unattended-upgrades ${srcdir}/mnt/etc/apt/apt.conf.d/50unattended-upgrades
##debconf
#echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | sudo arch-chroot ${srcdir}/mnt sudo debconf-set-selections
#sudo arch-chroot ${srcdir}/mnt sudo dpkg-reconfigure -f noninteractive unattended-upgrades
##Updating in the chroot can be done natively from an archlinux host of the same architecture
#  _msg2 "Comparing host and chroot architecture"
#  if [[ "${_hostarch}" != "${_imgarch}" ]] ; then
  #    _msg2 "CHROOT: updating image with apt via reverse-proxy..."
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list ${srcdir}/mnt/etc/apt/sources.list.bak
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list.d/armbian.list ${srcdir}/mnt/etc/apt/sources.list.d/armbian.list.bak
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list.d/skycoin.list ${srcdir}/mnt/etc/apt/sources.list.d/skycoin.list.bak
  #    sudo install -Dm644 ${srcdir}/proxy.sources.list ${srcdir}/mnt/etc/apt/sources.list
  #    #caddy start -config ${srcdir}/Caddyfile
  #    sudo arch-chroot ${srcdir}/mnt sudo apt update
  #    sudo arch-chroot ${srcdir}/mnt sudo apt upgrade
  #    #caddy stop
  #    sudo arch-chroot ${srcdir}/mnt sudo skybian-reset
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list.bak ${srcdir}/mnt/etc/apt/sources.list
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list.d/armbian.list.bak ${srcdir}/mnt/etc/apt/sources.list.d/armbian.list
  #    sudo mv ${srcdir}/mnt/etc/apt/sources.list.d/skycoin.list.bak ${srcdir}/mnt/etc/apt/sources.list.d/skycoin.list
  #  else
  #    _msg2 "CHROOT: updating image"
  #    sudo arch-chroot ${srcdir}/mnt sudo apt update
  #    sudo arch-chroot ${srcdir}/mnt sudo apt upgrade
  #    sudo arch-chroot ${srcdir}/mnt sudo skybian-reset
  #  fi
